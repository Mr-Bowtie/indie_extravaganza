# syntax = docker/dockerfile:latest

FROM amd64/ruby:3.1.3

# Set non-interactive mode for apt-get
ENV DEBIAN_FRONTEND noninteractive
# Allows rails server to be accessible outside this docker container
ENV BINDING="0.0.0.0"
# Set bundler path to use the cache volume
ENV BUNDLE_PATH vendor/bundle

# Set working directory
WORKDIR /root/work

# Install OS dependencies and tools
RUN apt-get update -qq && \
    apt-get install -y \
                    build-essential \
                    curl \
                    git \
                    libvips \
                    procps \
                    rsync \
                    wget \
                    node-gyp \
                    postgresql \
                    lsb-release \
                    netcat \
                    chromium \
                    chromium-driver && \
    # Clean up to reduce image size
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

COPY package.json yarn.lock ./
ARG NODE_VERSION=18.16.1
# ARG YARN_VERSION=1.22.19
ENV PATH=/usr/local/node/bin:$PATH
# Install Node
RUN curl -sL https://github.com/nodenv/node-build/archive/master.tar.gz | tar xz -C /tmp/ && \
    /tmp/node-build-master/bin/node-build "${NODE_VERSION}" /usr/local/node && \
    npm install -g yarn && \
    yarn install && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list && \
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    apt-get update && \
    apt-get -y install postgresql-client-15


COPY Gemfile Gemfile.lock ./
# RubyGems setup
RUN echo "gem: --no-document" >> ~/.gemrc && \
    gem install bundler && \
    bundle check || bundle install

# Expose port 3000
EXPOSE 3000

# Copy the docker entrypoint script
COPY ./docker-entrypoint.sh ./vite-entrypoint.sh /root
